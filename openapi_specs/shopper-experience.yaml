{
  "swagger": "2.0",
  "info": {
    "title": "Shopper Experience",
    "description": "Use the Shopper Experience API to look up page information for pages that are created in Page Designer.\n\nResponses include the following:\n\n- The entire component hierarchy of the page at design time.\n- All merchant data provided at design time.\n- Server-side scripting data provided at run time.\n\nBoth the page and components contain the values of all native and custom attributes that have been populated during page authoring.\n\nOnly visible pages are returned. Because the visibility of components is driven by rules (scheduling or customer groups, for example), these rules are subject to evaluation when assembling the component hierarchy in the response. Only components that are visible for the current customer context appear in the response. The same rules apply to the page itself, which is only be processed and returned if it is visible.\n\n**Important**: Currently, the Shopper Experience API canâ€™t be used when the [storefront password protection](https://documentation.b2c.commercecloud.salesforce.com/DOC1/index.jsp?topic=%2Fcom.demandware.dochelp%2Fcontent%2Fb2c_commerce%2Ftopics%2Fpermissions%2Fb2c_storefront_password_protection.html&resultof=%22%73%74%6f%72%65%66%72%6f%6e%74%22%20%22%70%72%6f%74%65%63%74%69%6f%6e%22%20%22%70%72%6f%74%65%63%74%22%20) feature is enabled.\n",
    "version": "v1"
  },
  "x-basePath": "{shortCode}.api.commercecloud.salesforce.com/experience/shopper-experience/{version}",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "PageResult": {
      "properties": {
        "data": {
          "title": "Data",
          "description": "List of pages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Page"
          }
        }
      },
      "required": [
        "data"
      ],
      "type": "object"
    },
    "Page": {
      "properties": {
        "id": {
          "title": "ID",
          "description": "Page identifier.",
          "example": "homepage",
          "type": "string"
        },
        "typeId": {
          "title": "Page Type ID",
          "description": "Page type identifier.",
          "example": "storePage",
          "type": "string"
        },
        "aspectTypeId": {
          "title": "Aspect Type ID",
          "description": "The aspect type assigned to the page.",
          "example": "pdpAspect",
          "type": "string"
        },
        "name": {
          "title": "Page Name",
          "description": "Display name of the page.",
          "example": "Homepage",
          "type": "string"
        },
        "description": {
          "title": "Page Description",
          "description": "Description of the page.",
          "example": "Home page of the storefront.",
          "type": "string"
        },
        "pageTitle": {
          "title": "SEO Title",
          "description": "The SEO title of the page.",
          "example": "Homepage - My Shop",
          "type": "string"
        },
        "pageDescription": {
          "title": "SEO Description",
          "description": "The SEO description of the page.",
          "example": "Get started shopping",
          "type": "string"
        },
        "pageKeywords": {
          "title": "SEO Keywords",
          "description": "The SEO keywords of the page.",
          "example": "fashion, my shop",
          "type": "string"
        },
        "data": {
          "title": "Page Data",
          "description": "The configuration data assigned to the page.",
          "example": {
            "thumbnail": "myshop.jpg"
          },
          "type": "object"
        },
        "custom": {
          "title": "Custom Page Data",
          "description": "Any custom data added by the custom code for the page type.",
          "example": {
            "thumbnail_full": "http://static.myshop.com/myshop.jpg"
          },
          "type": "object"
        },
        "regions": {
          "title": "Regions",
          "description": "The regions (and their assigned components) for the page.",
          "example": "Can not resolve Examples/storepage-regions-example.raml",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      },
      "required": [
        "id",
        "typeId"
      ],
      "type": "object"
    },
    "Region": {
      "properties": {
        "id": {
          "title": "ID",
          "description": "Region identifier.",
          "example": "header",
          "type": "string"
        },
        "components": {
          "title": "Components",
          "description": "The components in the region.",
          "example": "Can not resolve Examples/header-components-example.raml",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Component"
          }
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "Component": {
      "properties": {
        "id": {
          "title": "ID",
          "description": "Component identifier.",
          "example": "rfdvj4ojtltljw3",
          "type": "string"
        },
        "typeId": {
          "title": "Component Type ID",
          "description": "Component type identifier.",
          "example": "commerce_assets.carousel",
          "type": "string"
        },
        "data": {
          "title": "Component Data",
          "description": "The configuration data assigned to the component.",
          "example": {
            "title": "Topseller",
            "category": "topseller"
          },
          "type": "object"
        },
        "custom": {
          "title": "Custom Component Data",
          "description": "Any custom data added by the custom code for this component.",
          "example": {
            "detailUrl": "www.myshop.com/topseller"
          },
          "type": "object"
        },
        "regions": {
          "title": "Regions",
          "description": "The regions (and their assigned components) for the component.",
          "example": "Can not resolve Examples/carousel-regions-example.raml",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      },
      "required": [
        "id",
        "typeId"
      ],
      "type": "object"
    },
    "CommerceCloudStandards.ISO.Locale": {
      "description": "A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.",
      "type": "string"
    },
    "CommerceCloudStandards.SiteId": {
      "minLength": 1,
      "description": "The identifer of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites",
      "example": "SiteGenesis",
      "type": "string"
    },
    "CommerceCloudStandards.LocaleCode": {
      "$ref": "#/definitions/CommerceCloudStandards.ISO.Locale"
    }
  },
  "parameters": {
    "trait:ExperienceTraits.LocaleSpecific:locale": {
      "description": "A descriptor to provide locale context for a geographical region by both a language and/or country code. The locale pattern in the query param follows the ISO 639-1 for the language code (e.g. en, de, fr) and ISO 3166-1 for the country code (e.g. US, DE, AT). The param can be a combination of language code and country code or can just refer to the language code.\nBelow are some valid examples:\n- en-US\n- de-AT\n- de\n- default",
      "in": "query",
      "name": "locale",
      "type": "string"
    },
    "trait:CommerceCloudStandards.SiteSpecific:siteId": {
      "in": "query",
      "name": "siteId",
      "required": true,
      "type": "string"
    }
  },
  "responses": {
    "trait:ExperienceTraits.AspectAttributeInvalid:400": {
      "description": "Provided Aspect Attribute Invalid\n",
      "examples": {
        "application/problem+json": {
          "title": "Aspect Attribute Invalid",
          "type": "https://api.commercecloud.salesforce.com/documentation/error/v1/errors/aspect-attribute-invalid",
          "detail": "Aspect attribute value '5555' does not fulfill its respective definition {\"id\" : \"foobar\", \"type\" : \"string\",\"required\" : false\"}"
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "trait:ExperienceTraits.BusinessObjectIdInvalid:400": {
      "description": "Business Object ID Invalid\n",
      "examples": {
        "application/problem+json": {
          "title": "Business Object ID Invalid",
          "type": "https://api.commercecloud.salesforce.com/documentation/error/v1/errors/business-object-id-invalid",
          "detail": "At least one provided business object identifier was invalid. This means either none was provided at all or exclusiveness of multiple identifiers wasn't honored or the referenced business object didn't exist."
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "trait:ExperienceTraits.AspectTypeNotFound:404": {
      "description": "Requested Aspect Type Not Found\n",
      "examples": {
        "application/problem+json": {
          "title": "Aspect Type Not Found",
          "type": "https://api.commercecloud.salesforce.com/documentation/error/v1/errors/aspect-type-not-found",
          "detail": "No aspect type with ID 'pdp' was found in site 'RefArch'."
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "trait:ExperienceTraits.PageNotFound:404": {
      "description": "Requested Page Not Found\n",
      "examples": {
        "application/problem+json": {
          "title": "Page Not Found",
          "type": "https://api.commercecloud.salesforce.com/documentation/error/v1/errors/page-not-found",
          "detail": "No visible page with ID 'homepage' was found in site 'RefArch'."
        }
      },
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "paths": {
    "/organizations/{organizationId}/pages": {
      "get": {
        "description": "Get Page Designer pages. The results will apply the visibility rules for each page's components, such as personalization or scheduled visibility.\n\nEither `categoryId` or `productId` must be given in addition to `aspectTypeId`. Because only a single page-to-product and page-to-category assignment per aspect type can be authored today, the returned result contains one element at most.\n\n**Important**: Currently, the Shopper Experience API canâ€™t be used when the [storefront password protection](https://documentation.b2c.commercecloud.salesforce.com/DOC1/index.jsp?topic=%2Fcom.demandware.dochelp%2Fcontent%2Fb2c_commerce%2Ftopics%2Fpermissions%2Fb2c_storefront_password_protection.html&resultof=%22%73%74%6f%72%65%66%72%6f%6e%74%22%20%22%70%72%6f%74%65%63%74%69%6f%6e%22%20%22%70%72%6f%74%65%63%74%22%20) feature is enabled.\n\n**Important**: Because this resource uses the GET method, you must not pass sensitive data (payment card information, for example) and must not perform any transactional processes within the server-side scripts that are run for the page and components.",
        "operationId": "getPages",
        "produces": [
          "application/problem+json"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          },
          "400": {
            "$ref": "#/responses/trait:ExperienceTraits.BusinessObjectIdInvalid:400"
          },
          "404": {
            "$ref": "#/responses/trait:ExperienceTraits.AspectTypeNotFound:404"
          }
        },
        "parameters": [
          {
            "maxLength": 256,
            "description": "Category identifier that is used for searching the page assignment. Must be provided if no `productId` is provided.",
            "type": "string",
            "in": "query",
            "name": "categoryId"
          },
          {
            "maxLength": 256,
            "description": "Product identifier that is used for searching the page assignment. Must be provided if no `categoryId` is provided.",
            "type": "string",
            "in": "query",
            "name": "productId"
          },
          {
            "required": true,
            "maxLength": 256,
            "description": "Aspect type identifier that is used for searching the page assignment in conjunction with either the `productId` or `categoryId`.",
            "type": "string",
            "in": "query",
            "name": "aspectTypeId"
          },
          {
            "description": "A JSON respresentation of aspect attributes. Each aspect attribute is a key/value pair. Aspect attributes serve as a runtime parameter contract between caller (for example, this API or the DWScript API) and callee (the page). This parameter must not contain more than 256 characters after URL decoding.",
            "type": "string",
            "in": "query",
            "name": "aspectAttributes"
          },
          {
            "maxLength": 256,
            "description": "A free-form definition of parameters that influences the page rendering according to its implementation. This parameter must not contain more than 256 characters after URL decoding.",
            "type": "string",
            "in": "query",
            "name": "parameters"
          },
          {
            "$ref": "#/parameters/trait:CommerceCloudStandards.SiteSpecific:siteId"
          },
          {
            "$ref": "#/parameters/trait:ExperienceTraits.LocaleSpecific:locale"
          }
        ]
      },
      "parameters": [
        {
          "description": "An identifier for the organization the request is being made by.",
          "type": "string",
          "in": "path",
          "name": "organizationId",
          "required": true
        }
      ]
    },
    "/organizations/{organizationId}/pages/{pageId}": {
      "get": {
        "description": "Get a Page Designer page based on a single page ID. The results will apply the visibility rules for the page's components, such as personalization or scheduled visibility.\n\n**Important**: Currently, the Shopper Experience API canâ€™t be used when the [storefront password protection](https://documentation.b2c.commercecloud.salesforce.com/DOC1/index.jsp?topic=%2Fcom.demandware.dochelp%2Fcontent%2Fb2c_commerce%2Ftopics%2Fpermissions%2Fb2c_storefront_password_protection.html&resultof=%22%73%74%6f%72%65%66%72%6f%6e%74%22%20%22%70%72%6f%74%65%63%74%69%6f%6e%22%20%22%70%72%6f%74%65%63%74%22%20) feature is enabled.\n\n**Important**: Because this resource uses the GET method, you must not pass sensitive data (payment card information, for example) and must not perform any transactional processes within the server-side scripts that are run for the page and components.",
        "operationId": "getPage",
        "produces": [
          "application/problem+json"
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "$ref": "#/responses/trait:ExperienceTraits.AspectAttributeInvalid:400"
          },
          "404": {
            "$ref": "#/responses/trait:ExperienceTraits.PageNotFound:404"
          }
        },
        "parameters": [
          {
            "description": "A JSON respresentation of aspect attributes. Each aspect attribute is a key/value pair. Aspect attributes serve as a runtime parameter contract between caller (for example, this API or the DWScript API) and callee (the page). This parameter must not contain more than 256 characters after URL decoding.",
            "type": "string",
            "in": "query",
            "name": "aspectAttributes"
          },
          {
            "maxLength": 256,
            "description": "A free-form definition of parameters that influences the page rendering according to its implementation. This parameter must not contain more than 256 characters after URL decoding.",
            "type": "string",
            "in": "query",
            "name": "parameters"
          },
          {
            "$ref": "#/parameters/trait:CommerceCloudStandards.SiteSpecific:siteId"
          },
          {
            "$ref": "#/parameters/trait:ExperienceTraits.LocaleSpecific:locale"
          }
        ]
      },
      "parameters": [
        {
          "maxLength": 256,
          "description": "Identifier for the requested page.",
          "type": "string",
          "in": "path",
          "name": "pageId",
          "required": true
        },
        {
          "description": "An identifier for the organization the request is being made by.",
          "type": "string",
          "in": "path",
          "name": "organizationId",
          "required": true
        }
      ]
    }
  }
}