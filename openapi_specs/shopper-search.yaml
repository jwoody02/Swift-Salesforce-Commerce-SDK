{
  "swagger": "2.0",
  "info": {
    "title": "Shopper Search",
    "description": "# API Overview\n\nThe Shopper Search API enables you to implement search functionality that lets shoppers search for products using keywords and refinement. The search results can be products or suggestions based on the endpoint you choose in the API.\n\n## Authentication & Authorization\n\nThe client requesting the API must have access to the product search and search suggestion resource.\nThe Shopper Search API requires a JWT acquired via the Shopper Customers endpoint:\n\n```\nhttps://{shortCode}.api.commercecloud.salesforce.com/customer/shopper-customers/v1/organizations/{organizationId}/customers/actions/login .\n```\n\n## Use Cases\n\n### Provide Search Suggestions\n\nUse the Shopper Search API to provide search suggestions as a shopper searches.\n\nFor example, a developer who is building a shopping app using the Salesforce Commerce API would like to provide product, brand, and category suggestions. When a shopper types in a search phrase that exceeds a definable minimum length and the GET Search Suggestion endpoint is requested, the platform delivers a set of suggestions with products (name, ID), brands (name), and categories (name, ID). Shoppers can reach their desired search results more quickly using the suggested completion and correction.\n\n### Provide Search Results\n\nUse the Shopper Search API to gather product results for a shoppers search query.\n\nFor example, a developer who is building a shopping app using the Salesforce Commerce API would like to implement a product search functionality. When a shopper enters a search phrase and the GET Product Search endpoint is requested, the platform performs a keyword search and a sorted search result is returned. The sorted search result can be refined according to given values (for example, a price range).\nThe product search result contains a definable number of product search hits. A product search hit describes a matching product with its ID and name. Furthermore, the search hit contains product images, prices, represented products, and variations. In addition to the search hits, the search results also deliver refinement and sorting options.\n",
    "version": "v1"
  },
  "x-basePath": "{shortCode}.api.commercecloud.salesforce.com/search/shopper-search/{version}/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "ApiStandards.ErrorResponse": {
      "$ref": "#/definitions/ApiStandards.Error.Error"
    },
    "ApiStandards.Limit": {
      "$ref": "#/definitions/ApiStandards.Pagination.limit"
    },
    "ApiStandards.Error.Error": {
      "description": "Errors reported by all APIs correspond to this error document format. \nThis format follows the RFC [IETF rfc7807](https://tools.ietf.org/html/rfc7807). \nThis may include additional properties as necessary to provide additional details \nregarding the error message.",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "description": "A URI reference [RFC3986] that identifies the\nproblem type.  This specification encourages that, when\ndereferenced, it provide human-readable documentation for the\nproblem type (e.g., using HTML [W3C.REC-html5-20141028]).  When\nthis member is not present, its value is assumed to be\n\"about:blank\". It accepts relative URIs; this means\nthat they must be resolved relative to the document's base URI, as\nper [RFC3986], Section 5.\n",
          "example": "https://api.commercecloud.salesforce.com/documentation/error/v1/errors/not-found",
          "type": "string"
        },
        "title": {
          "description": "A short, human-readable summary of the problem\ntype.  It will not change from occurrence to occurrence of the\nproblem, except for purposes of localization.\n",
          "example": "Not Found.",
          "type": "string"
        },
        "detail": {
          "description": "A human-readable explanation specific to this\noccurrence of the problem.\n",
          "example": "The requested resource was not found.",
          "type": "string"
        },
        "instance": {
          "description": "A URI reference that identifies the specific\noccurrence of the problem.  It may or may not yield further\ninformation if dereferenced.  It accepts relative URIs; this means\nthat they must be resolved relative to the document's base URI, as\nper [RFC3986], Section 5.\n",
          "example": "/account/12345/msgs/abc",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "ApiStandards.Pagination.offset": {
      "default": 0,
      "minimum": 0,
      "format": "int64",
      "description": "Used to retrieve the results based on a particular resource offset.",
      "type": "integer"
    },
    "ApiStandards.Pagination.limit": {
      "default": 10,
      "minimum": 1,
      "format": "int32",
      "description": "Maximum records to retrieve per request, not to exceed the maximum defined. A limit must be at least 1 so at least one record is returned (if any match the criteria).",
      "type": "integer"
    },
    "ApiStandards.Pagination.total": {
      "default": 0,
      "minimum": 0,
      "format": "int64",
      "description": "The total number of hits that match the search's criteria. This can be greater than the number of results returned as search results are pagenated.",
      "type": "integer"
    },
    "CommerceCloudStandards.ISO.Currency": {
      "description": "A three letter uppercase currency code conforming to the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard, or the string `N/A` indicating that a currency is not applicable.",
      "type": "string"
    },
    "CommerceCloudStandards.ISO.Locale": {
      "description": "A descriptor for a geographical region by both a language and country code. By combining these two, regional differences in a language can be addressed, such as with the request header parameter `Accept-Language` following [RFC 2616](https://tools.ietf.org/html/rfc2616) & [RFC 1766](https://tools.ietf.org/html/rfc1766). This can also just refer to a language code, also RFC 2616/1766 compliant, as a default if there is no specific match for a country. Finally, can also be used to define default behavior if there is no locale specified.",
      "type": "string"
    },
    "CommerceCloudStandards.SiteId": {
      "minLength": 1,
      "description": "The identifer of the site that a request is being made in the context of. Attributes might have site specific values, and some objects may only be assigned to specific sites",
      "example": "SiteGenesis",
      "type": "string"
    },
    "CommerceCloudStandards.CurrencyCode": {
      "$ref": "#/definitions/CommerceCloudStandards.ISO.Currency"
    },
    "CommerceCloudStandards.LocaleCode": {
      "$ref": "#/definitions/CommerceCloudStandards.ISO.Locale"
    },
    "SearchTypeLibrary.ProductRef": {
      "description": "Document representing a product reference.",
      "properties": {
        "id": {
          "description": "The ID of the product reference.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.ProductSearchHit": {
      "description": "Document representing a product search hit.",
      "properties": {
        "currency": {
          "$ref": "#/definitions/CommerceCloudStandards.CurrencyCode"
        },
        "hitType": {
          "description": "The type information for the search hit.",
          "type": "string"
        },
        "image": {
          "description": "The first image of the product hit for the configured viewtype.",
          "$ref": "#/definitions/SearchTypeLibrary.Image"
        },
        "orderable": {
          "description": "A flag indicating whether the product is orderable.",
          "type": "boolean"
        },
        "price": {
          "format": "double",
          "description": "The sales price of the product. In complex products, like master or set, this is the minimum price of\n related child products.",
          "type": "number"
        },
        "priceMax": {
          "format": "double",
          "description": "The maximum sales of related child products in complex products like master or set.",
          "type": "number"
        },
        "prices": {
          "description": "The prices map with price book IDs and their values.",
          "type": "object",
          "additionalProperties": {
            "format": "double",
            "type": "number"
          }
        },
        "productId": {
          "description": "The ID (SKU) of the product.",
          "type": "string"
        },
        "productName": {
          "description": "The localized name of the product.",
          "type": "string"
        },
        "productType": {
          "description": "The type information for the product.",
          "$ref": "#/definitions/SearchTypeLibrary.ProductType"
        },
        "representedProduct": {
          "description": "The first represented product.",
          "$ref": "#/definitions/SearchTypeLibrary.ProductRef"
        },
        "representedProducts": {
          "description": "All the represented products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.ProductRef"
          }
        },
        "variationAttributes": {
          "description": "The array of represented variation attributes, for the master product only. This array can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.VariationAttribute"
          }
        }
      },
      "required": [
        "productId"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.ProductSearchRefinement": {
      "description": "Document representing a product search refinement attribute.",
      "properties": {
        "attributeId": {
          "description": "The ID of the search refinement attribute. In the case of an attribute refinement, this is the attribute ID.\n Custom attributes are marked by the prefix \"c_\" (for example, \"c_refinementColor\"). In the case of a\n category refinement, the ID must be \"cgid\". In the case of a price refinement, the ID must be \"price\".",
          "type": "string"
        },
        "label": {
          "description": "The localized label of the refinement.",
          "type": "string"
        },
        "values": {
          "description": "The sorted array of refinement values. This array can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.ProductSearchRefinementValue"
          }
        }
      },
      "required": [
        "attributeId"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.ProductSearchRefinementValue": {
      "description": "Document representing a product search refinement value.",
      "properties": {
        "description": {
          "description": "The localized description of the refinement value.",
          "type": "string"
        },
        "hitCount": {
          "format": "int32",
          "description": "The number of search hits when selecting the refinement value. Can be 0.",
          "type": "integer"
        },
        "label": {
          "description": "The localized label of the refinement value.",
          "type": "string"
        },
        "presentationId": {
          "description": "The optional presentation ID associated with the refinement value.\n The presentation ID can be used, for example, to associate an ID with\n an HTML widget.",
          "type": "string"
        },
        "value": {
          "description": "The refinement value. In the case of an attribute refinement, this is the bucket,\n the attribute value, or a value range. In the case of a category refinement, this is the\n category ID. In the case of a price refinement, this is the price range. Ranges are\n enclosed by parentheses and separated by \"..\"; for example, \"(100..999)\" and \"(Aa..Fa)\"\n are valid ranges.",
          "type": "string"
        },
        "values": {
          "description": "The array of hierarchical refinement values. This array can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.ProductSearchRefinementValue"
          }
        }
      },
      "required": [
        "hitCount",
        "label",
        "value"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.ProductSearchSortingOption": {
      "description": "Document representing a product search sorting option.",
      "properties": {
        "id": {
          "description": "The ID of the sorting option.",
          "type": "string"
        },
        "label": {
          "description": "The localized label of the sorting option.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "label"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.ProductType": {
      "description": "Document representing a product type.",
      "properties": {
        "bundle": {
          "description": "A flag indicating whether the product is a bundle.",
          "type": "boolean"
        },
        "item": {
          "description": "A flag indicating whether the product is a standard item.",
          "type": "boolean"
        },
        "master": {
          "description": "A flag indicating whether the product is a master.",
          "type": "boolean"
        },
        "option": {
          "description": "A flag indicating whether the product is an option.",
          "type": "boolean"
        },
        "set": {
          "description": "A flag indicating whether the product is a set.",
          "type": "boolean"
        },
        "variant": {
          "description": "A flag indicating whether the product is a variant.",
          "type": "boolean"
        },
        "variationGroup": {
          "description": "A flag indicating whether the product is a variation group.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SearchTypeLibrary.VariationAttributeValue": {
      "description": "Document representing a variation attribute value.",
      "properties": {
        "description": {
          "description": "The localized description of the variation value.",
          "type": "string"
        },
        "image": {
          "description": "The first product image for the configured viewtype and this variation value.",
          "$ref": "#/definitions/SearchTypeLibrary.Image"
        },
        "imageSwatch": {
          "description": "The first product image for the configured viewtype and this variation value. Typically the swatch image.",
          "$ref": "#/definitions/SearchTypeLibrary.Image"
        },
        "name": {
          "description": "The localized display name of the variation value.",
          "type": "string"
        },
        "orderable": {
          "description": "A flag indicating whether at least one variant with this variation attribute value is available to sell.",
          "type": "boolean"
        },
        "value": {
          "minLength": 1,
          "description": "The actual variation value.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.VariationAttribute": {
      "description": "Document representing a variation attribute.",
      "properties": {
        "id": {
          "minLength": 1,
          "description": "The ID of the variation attribute.",
          "type": "string"
        },
        "name": {
          "description": "The localized display name of the variation attribute.",
          "type": "string"
        },
        "values": {
          "description": "The sorted array of variation values. This array can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.VariationAttributeValue"
          }
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.ProductSearchResult": {
      "description": "Document representing a product search result.",
      "properties": {
        "limit": {
          "format": "int32",
          "description": "The number of returned documents.",
          "$ref": "#/definitions/ApiStandards.Limit"
        },
        "hits": {
          "description": "The sorted array of search hits. This array can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.ProductSearchHit"
          }
        },
        "query": {
          "description": "The query string that was searched for.",
          "type": "string"
        },
        "refinements": {
          "description": "The sorted array of search refinements. This array can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.ProductSearchRefinement"
          }
        },
        "searchPhraseSuggestions": {
          "description": "The suggestion given by the system for the submitted search phrase.",
          "$ref": "#/definitions/SearchTypeLibrary.Suggestion"
        },
        "selectedRefinements": {
          "description": "A map of selected refinement attribute ID or value pairs. The sorting order is the same as in request URL.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "selectedSortingOption": {
          "description": "The ID of the applied sorting option.",
          "type": "string"
        },
        "sortingOptions": {
          "description": "The sorted array of search sorting options. This array can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.ProductSearchSortingOption"
          }
        },
        "offset": {
          "minimum": 0,
          "format": "int32",
          "description": "The zero-based index of the first search hit to include in the result.",
          "type": "integer"
        },
        "total": {
          "format": "int32",
          "description": "The total number of documents.",
          "type": "integer"
        }
      },
      "required": [
        "limit",
        "hits",
        "query",
        "refinements",
        "searchPhraseSuggestions",
        "sortingOptions",
        "offset",
        "total"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.Image": {
      "properties": {
        "alt": {
          "type": "string"
        },
        "disBaseLink": {
          "type": "string"
        },
        "link": {
          "minLength": 1,
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "link"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.SuggestedPhrase": {
      "description": "Document representing a suggested search phrase.",
      "properties": {
        "exactMatch": {
          "description": "Returns whether this suggested phrase exactly matches the user input search phrase.",
          "type": "boolean"
        },
        "phrase": {
          "description": "Returns the suggested search phrase.",
          "type": "string"
        }
      },
      "required": [
        "exactMatch",
        "phrase"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.SuggestedTerms": {
      "description": "Document representing a list of suggested terms for each term of a search phrase.",
      "properties": {
        "originalTerm": {
          "description": "Returns the original term that the suggested terms relates to.",
          "type": "string"
        },
        "terms": {
          "description": "Returns the suggested terms.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.SuggestedTerm"
          }
        }
      },
      "required": [
        "originalTerm"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.SuggestedTerm": {
      "description": "Document representing a suggested term.",
      "properties": {
        "completed": {
          "description": "Returns whether this term value is a completion match.",
          "type": "boolean"
        },
        "corrected": {
          "description": "Returns whether this term value is a correction match.",
          "type": "boolean"
        },
        "exactMatch": {
          "description": "Returns whether this term value is a exact match.",
          "type": "boolean"
        },
        "value": {
          "description": "Returns the term value.",
          "type": "string"
        }
      },
      "required": [
        "completed",
        "corrected",
        "exactMatch",
        "value"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.Suggestion": {
      "description": "Document representing a suggestion.",
      "properties": {
        "suggestedPhrases": {
          "description": "A list of suggested phrases. This list can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.SuggestedPhrase"
          }
        },
        "suggestedTerms": {
          "description": "A list of suggested terms. This list can be empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchTypeLibrary.SuggestedTerms"
          }
        }
      },
      "required": [
        "suggestedTerms"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.SuggestedProduct": {
      "description": "Document representing a product search hit.",
      "properties": {
        "currency": {
          "$ref": "#/definitions/CommerceCloudStandards.CurrencyCode"
        },
        "price": {
          "format": "double",
          "description": "The sales price of the product. In the case of complex products like a master or a set, this is the minimum price of\n related child products.",
          "type": "number"
        },
        "productId": {
          "description": "The ID (SKU) of the product.",
          "type": "string"
        },
        "productName": {
          "description": "The localized name of the product.",
          "type": "string"
        }
      },
      "required": [
        "currency",
        "price",
        "productId",
        "productName"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.SuggestedCategory": {
      "properties": {
        "id": {
          "description": "The ID of the category.",
          "type": "string"
        },
        "name": {
          "description": "The localized name of the category.",
          "type": "string"
        },
        "parentCategoryName": {
          "description": "The name of the parent category.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "parentCategoryName"
      ],
      "type": "object"
    },
    "SearchTypeLibrary.CategorySuggestions": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchTypeLibrary.Suggestion"
        },
        {
          "properties": {
            "categories": {
              "description": "The sorted list of suggested categories. This list can be empty.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchTypeLibrary.SuggestedCategory"
              }
            }
          },
          "type": "object"
        }
      ]
    },
    "SearchTypeLibrary.ProductSuggestions": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchTypeLibrary.Suggestion"
        },
        {
          "properties": {
            "products": {
              "description": "The sorted list of suggested products. This list can be empty.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchTypeLibrary.SuggestedProduct"
              }
            }
          },
          "type": "object"
        }
      ]
    },
    "SearchTypeLibrary.BrandSuggestions": {
      "description": "The suggested brand names are listed in suggested phrases. If this list is empty, no brand suggestion for a given search phrase was found.",
      "$ref": "#/definitions/SearchTypeLibrary.Suggestion"
    },
    "SearchTypeLibrary.CustomSuggestions": {
      "description": "The custom suggestions are listed in suggested phrases. If this list is empty, no custom suggestion for the given search phrase was found.",
      "allOf": [
        {
          "$ref": "#/definitions/SearchTypeLibrary.Suggestion"
        },
        {
          "properties": {
            "customSuggestion": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    },
    "SearchTypeLibrary.SuggestionResult": {
      "description": "Document representing a search suggestion result.",
      "properties": {
        "brandSuggestions": {
          "description": "Returns the suggested brands.",
          "$ref": "#/definitions/SearchTypeLibrary.BrandSuggestions"
        },
        "categorySuggestions": {
          "description": "Returns the suggested categories.",
          "$ref": "#/definitions/SearchTypeLibrary.CategorySuggestions"
        },
        "productSuggestions": {
          "description": "Returns the suggested products.",
          "$ref": "#/definitions/SearchTypeLibrary.ProductSuggestions"
        },
        "customSuggestion": {
          "description": "Returns custom suggestions.",
          "$ref": "#/definitions/SearchTypeLibrary.CustomSuggestions"
        },
        "searchPhrase": {
          "description": "The query phrase (q) for which suggestions where made.",
          "type": "string"
        }
      },
      "required": [
        "searchPhrase"
      ],
      "type": "object"
    }
  },
  "parameters": {
    "trait:ApiStandards.OffsetPaginated:offset": {
      "in": "query",
      "name": "offset",
      "type": "string"
    }
  },
  "responses": {
    "trait:ApiStandards.RateLimited:429": {
      "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
      "headers": {
        "Retry-After": {
          "examples": [
            120
          ],
          "type": "string"
        }
      },
      "schema": {
        "example": {
          "type": "https://api.commercecloud.salesforce.com/documentation/error/v1/errors/too-many-requests",
          "title": "Too Many Requests",
          "detail": "You have performed too many requests in a short period of time."
        },
        "properties": {
          "type": {
            "description": "A URI reference [RFC3986] that identifies the\nproblem type.  This specification encourages that, when\ndereferenced, it provide human-readable documentation for the\nproblem type (e.g., using HTML [W3C.REC-html5-20141028]).  When\nthis member is not present, its value is assumed to be\n\"about:blank\". It accepts relative URIs; this means\nthat they must be resolved relative to the document's base URI, as\nper [RFC3986], Section 5.\n",
            "example": "https://example.com/probs/out-of-credit",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem\ntype.  It will not change from occurrence to occurrence of the\nproblem, except for purposes of localization.\n",
            "example": "You do not have enough credit.",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this\noccurrence of the problem.\n",
            "example": "Your current balance is 30, but that costs 50.",
            "type": "string"
          },
          "instance": {
            "description": "A URI reference that identifies the specific\noccurrence of the problem.  It may or may not yield further\ninformation if dereferenced.  It accepts relative URIs; this means\nthat they must be resolved relative to the document's base URI, as\nper [RFC3986], Section 5.\n",
            "example": "/account/12345/msgs/abc",
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    "trait:ApiStandards.OffsetPaginated:200": {
      "description": "",
      "headers": {
        "SFDC-Pagination-Offset": {
          "description": "The starting offset returned.",
          "type": "string"
        },
        "SFDC-Pagination-Limit": {
          "maximum": null,
          "description": "The limit requested.",
          "default": "<<defaultSize>>",
          "type": "string"
        },
        "SFDC-Pagination-Total-Count": {
          "type": "string"
        },
        "SFDC-Pagination-Result-Count": {
          "format": "int64",
          "description": "The number of results included in the response.",
          "type": "number"
        }
      }
    },
    "trait:SearchTypeLibrary.Unauthorized:401": {
      "description": "Unauthorized.",
      "examples": {
        "application/problem+json": {
          "title": "Invalid Access Token",
          "type": "https://api.commercecloud.salesforce.com/documentation/error/v1/errors/invalid-access-token",
          "detail": "The request is unauthorized, the access token is invalid.",
          "accessToken": "hbGciOiJIUzI1NiIsInR5cCI6Ikp"
        }
      },
      "schema": {
        "$ref": "#/definitions/ApiStandards.ErrorResponse"
      }
    }
  },
  "paths": {
    "/organizations/{organizationId}/product-search": {
      "get": {
        "description": "Provides keyword and refinement search functionality for products. Only returns the product ID, link, and name in\nthe product search hit. The search result contains only products that are online and assigned to site catalog.",
        "operationId": "productSearch",
        "produces": [
          "application/problem+json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/trait:ApiStandards.OffsetPaginated:200"
          },
          "400": {
            "description": "Thrown if a price refinement parameter is malformed or the refinement limit is exceeded.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "The maximum number of requests permitted per minute.",
                "type": "string"
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests remaining in the current rate limit window.",
                "type": "string"
              },
              "X-RateLimit-Reset": {
                "description": "The time at which the current rate limit window resets in UTC epoch seconds.",
                "type": "string"
              }
            },
            "examples": {
              "application/problem+json": {
                "product-search-400-error": "Can not resolve Examples/product-search-400-error-example.raml"
              }
            },
            "schema": {
              "$ref": "#/definitions/ApiStandards.ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/trait:SearchTypeLibrary.Unauthorized:401"
          },
          "429": {
            "$ref": "#/responses/trait:ApiStandards.RateLimited:429"
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "siteId",
            "required": true,
            "type": "string"
          },
          {
            "maxLength": 50,
            "description": "The query phrase to search for. For example to search for a product \"shirt\", type q=shirt.",
            "type": "string",
            "in": "query",
            "name": "q"
          },
          {
            "description": "Parameter that represents a refinement attribute or values pair. Refinement attribute ID and\n            values are separated by '='. Multiple values are supported by a subset of refinement attributes and\n            can be provided by separating them using a pipe (URL\n            encoded = \"|\") i.e. refine=c_refinementColor=red|green|blue. Value ranges can be specified like this: refine=price=(100..500) . Multiple refine parameters can be provided by using the refine as the key i.e refine=price=(0..10)&refine=c_refinementColor=green. The refinements can be a collection of custom defined attributes IDs and the system defined attributes IDs but the search can only accept a total of 9 refinements at a time.\n            The following system refinement attribute ids are supported:\n              \n            cgid: Allows refinement per single category ID. Multiple category ids are not supported.\n            price: Allows refinement per single price range. Multiple price ranges are not supported.\n            pmid: Allows refinement per promotion ID.\n            htype: Allow refinement by including only the provided hit types. Accepted types are 'product', 'master', 'set', 'bundle', 'slicing_group' (deprecated), 'variation_group'.\n            orderable_only: Unavailable products are excluded from the search results if true is set. Multiple refinement values are not supported.                               ",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "refine"
          },
          {
            "description": "The ID of the sorting option to sort the search hits.",
            "type": "string",
            "in": "query",
            "name": "sort"
          },
          {
            "description": "The currency mnemonic specified for price. This parameter is effective only if the returned results contain prices.",
            "in": "query",
            "name": "currency",
            "type": "string"
          },
          {
            "in": "query",
            "name": "locale",
            "type": "string"
          },
          {
            "description": "The expand parameter. A list with the allowed values (availability, images, prices, represented_products, variations). If the parameter is missing all the values will be returned.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "in": "query",
            "name": "expand"
          },
          {
            "default": 25,
            "maximum": 200,
            "description": "Maximum records to retrieve per request, not to exceed 200. Defaults to 25.",
            "in": "query",
            "name": "limit",
            "type": "string"
          },
          {
            "$ref": "#/parameters/trait:ApiStandards.OffsetPaginated:offset"
          }
        ]
      },
      "parameters": [
        {
          "description": "An identifier for the organization the request is being made by.",
          "type": "string",
          "in": "path",
          "name": "organizationId",
          "required": true
        }
      ]
    },
    "/organizations/{organizationId}/search-suggestions": {
      "get": {
        "description": "Provides keyword search functionality for products, categories, and brands suggestions. Returns suggested products, suggested categories, and suggested brands for the given search phrase.",
        "operationId": "getSearchSuggestions",
        "produces": [
          "application/problem+json"
        ],
        "responses": {
          "200": {
            "description": "Search suggestions are successfully returned.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "The maximum number of requests permitted per minute.",
                "type": "string"
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests remaining in the current rate limit window.",
                "type": "string"
              },
              "X-RateLimit-Reset": {
                "description": "The time at which the current rate limit window resets in UTC epoch seconds.",
                "type": "string"
              }
            },
            "examples": {
              "application/json": {
                "search_suggestion": "Can not resolve Examples/search-suggestion-result-example.raml"
              }
            },
            "schema": {
              "$ref": "#/definitions/SearchTypeLibrary.SuggestionResult"
            }
          },
          "400": {
            "description": "Thrown in case a query parameter or its value is unknown, or a maximum or minimum constraint is violated.",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "The maximum number of requests permitted per minute.",
                "type": "string"
              },
              "X-RateLimit-Remaining": {
                "description": "The number of requests remaining in the current rate limit window.",
                "type": "string"
              },
              "X-RateLimit-Reset": {
                "description": "The time at which the current rate limit window resets in UTC epoch seconds.",
                "type": "string"
              }
            },
            "examples": {
              "application/problem+json": {
                "search-suggestion-400-error": "Can not resolve Examples/search-suggestion-400-error-example.raml"
              }
            },
            "schema": {
              "$ref": "#/definitions/ApiStandards.ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/trait:SearchTypeLibrary.Unauthorized:401"
          },
          "429": {
            "$ref": "#/responses/trait:ApiStandards.RateLimited:429"
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "siteId",
            "required": true,
            "type": "string"
          },
          {
            "required": true,
            "minLength": 1,
            "maxLength": 50,
            "description": "The search phrase (q) for which suggestions are evaluated. Search suggestions are determined when the search phrase input is at least three (default) characters long. The value is configurable in the Business Manager.",
            "type": "string",
            "in": "query",
            "name": "q"
          },
          {
            "default": 5,
            "minimum": 1,
            "maximum": 10,
            "format": "int32",
            "description": "The maximum number of suggestions made per request. If no value is defined, by default five suggestions per suggestion type are evaluated. This affects all types of suggestions (category, product, brand, and custom suggestions).",
            "type": "integer",
            "in": "query",
            "name": "limit"
          },
          {
            "description": "The currency code specified for price. This parameter is effective only for product suggestions.",
            "in": "query",
            "name": "currency",
            "type": "string"
          },
          {
            "in": "query",
            "name": "locale",
            "type": "string"
          }
        ]
      },
      "parameters": [
        {
          "description": "An identifier for the organization the request is being made by.",
          "type": "string",
          "in": "path",
          "name": "organizationId",
          "required": true
        }
      ]
    }
  }
}