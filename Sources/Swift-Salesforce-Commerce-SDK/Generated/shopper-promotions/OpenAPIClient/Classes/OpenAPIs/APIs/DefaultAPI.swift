//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**

     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter ids: (query)  
     - parameter locale: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getPromotions(organizationId: String, siteId: String, ids: String, locale: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: PromotionResult?, _ error: Error?) -> Void)) -> RequestTask {
        return getPromotionsWithRequestBuilder(organizationId: organizationId, siteId: siteId, ids: ids, locale: locale).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /organizations/{organizationId}/promotions
     - Returns an array of enabled promotions for a list of specified IDs. In the request URL, you can specify up to 50 IDs. If you specify an ID that contains either parentheses or the separator characters, you must URL encode these characters. Each request returns only enabled promotions as the server does not consider promotion qualifiers or schedules.
     - responseHeaders: [X-RateLimit-Remaining(String), X-RateLimit-Reset(String), X-RateLimit-Limit(String)]
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter ids: (query)  
     - parameter locale: (query)  (optional)
     - returns: RequestBuilder<PromotionResult> 
     */
    open class func getPromotionsWithRequestBuilder(organizationId: String, siteId: String, ids: String, locale: String? = nil) -> RequestBuilder<PromotionResult> {
        var localVariablePath = "/organizations/{organizationId}/promotions"
        let organizationIdPreEscape = "\(APIHelper.mapValueToPathItem(organizationId))"
        let organizationIdPostEscape = organizationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{organizationId}", with: organizationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "siteId": (wrappedValue: siteId.encodeToJSON(), isExplode: false),
            "ids": (wrappedValue: ids.encodeToJSON(), isExplode: false),
            "locale": (wrappedValue: locale?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PromotionResult>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter campaignId: (path) Find the promotions assigned to this campaign (mandatory). 
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter startDate: (query) The start date of the promotion in ISO8601 date time format: yyyy-MM-dd&#39;T&#39;HH:mmZ (optional)
     - parameter endDate: (query) The end date of the promotion in ISO8601 date time format: yyyy-MM-dd&#39;T&#39;HH:mmZ (optional)
     - parameter currency: (query) The currency mnemonic specified for price. This parameter is effective only for product suggestions. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getPromotionsForCampaign(campaignId: String, organizationId: String, siteId: String, startDate: String? = nil, endDate: String? = nil, currency: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: PromotionResult?, _ error: Error?) -> Void)) -> RequestTask {
        return getPromotionsForCampaignWithRequestBuilder(campaignId: campaignId, organizationId: organizationId, siteId: siteId, startDate: startDate, endDate: endDate, currency: currency).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /organizations/{organizationId}/promotions/campaigns/{campaignId}
     - Handles get promotion by filter criteria. Returns an array of enabled promotions matching the specified filter criteria. In the request URL, you must provide a campaign_id parameter, and you can optionally specify a date range by providing start_date and end_date parameters. Both parameters are required to specify a date range, as  omitting one causes the server to return a MissingParameterException fault. Each request returns only enabled promotions, since the server does not consider promotion qualifiers or schedules.
     - responseHeaders: [X-RateLimit-Remaining(String), X-RateLimit-Reset(String), X-RateLimit-Limit(String)]
     - parameter campaignId: (path) Find the promotions assigned to this campaign (mandatory). 
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter startDate: (query) The start date of the promotion in ISO8601 date time format: yyyy-MM-dd&#39;T&#39;HH:mmZ (optional)
     - parameter endDate: (query) The end date of the promotion in ISO8601 date time format: yyyy-MM-dd&#39;T&#39;HH:mmZ (optional)
     - parameter currency: (query) The currency mnemonic specified for price. This parameter is effective only for product suggestions. (optional)
     - returns: RequestBuilder<PromotionResult> 
     */
    open class func getPromotionsForCampaignWithRequestBuilder(campaignId: String, organizationId: String, siteId: String, startDate: String? = nil, endDate: String? = nil, currency: String? = nil) -> RequestBuilder<PromotionResult> {
        var localVariablePath = "/organizations/{organizationId}/promotions/campaigns/{campaignId}"
        let campaignIdPreEscape = "\(APIHelper.mapValueToPathItem(campaignId))"
        let campaignIdPostEscape = campaignIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{campaignId}", with: campaignIdPostEscape, options: .literal, range: nil)
        let organizationIdPreEscape = "\(APIHelper.mapValueToPathItem(organizationId))"
        let organizationIdPostEscape = organizationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{organizationId}", with: organizationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "siteId": (wrappedValue: siteId.encodeToJSON(), isExplode: false),
            "startDate": (wrappedValue: startDate?.encodeToJSON(), isExplode: false),
            "endDate": (wrappedValue: endDate?.encodeToJSON(), isExplode: false),
            "currency": (wrappedValue: currency?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PromotionResult>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
