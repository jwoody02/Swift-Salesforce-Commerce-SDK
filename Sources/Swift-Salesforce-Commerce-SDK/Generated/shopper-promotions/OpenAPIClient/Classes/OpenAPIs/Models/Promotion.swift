//
// Promotion.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Document representing a promotion. */
public struct Promotion: Codable, JSONEncodable, Hashable {

    /** The localized call-out message of the promotion. */
    public var calloutMsg: String?
    /** The currency that a promotion can be applied to. A null value means that the promotion applies to all allowed  currencies. */
    public var currency: String?
    /** The localized detailed description of the promotion. */
    public var details: String?
    /** The end date of the promotion. This property follows the ISO8601 date time format: yyyy-MM-dd'T'HH:mmZ . The time  zone of the date time is always UTC. */
    public var endDate: Date?
    /** The unique ID of the promotion. */
    public var id: String
    /** The URL to the promotion image. */
    public var image: String?
    /** The localized name of the promotion. */
    public var name: String?
    /** The start date of the promotion. This property follows the ISO8601 date time format: yyyy-MM-dd'T'HH:mmZ. The  time zone of the date time is always UTC. */
    public var startDate: Date?

    public init(calloutMsg: String? = nil, currency: String? = nil, details: String? = nil, endDate: Date? = nil, id: String, image: String? = nil, name: String? = nil, startDate: Date? = nil) {
        self.calloutMsg = calloutMsg
        self.currency = currency
        self.details = details
        self.endDate = endDate
        self.id = id
        self.image = image
        self.name = name
        self.startDate = startDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case calloutMsg
        case currency
        case details
        case endDate
        case id
        case image
        case name
        case startDate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(calloutMsg, forKey: .calloutMsg)
        try container.encodeIfPresent(currency, forKey: .currency)
        try container.encodeIfPresent(details, forKey: .details)
        try container.encodeIfPresent(endDate, forKey: .endDate)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(startDate, forKey: .startDate)
    }
}

