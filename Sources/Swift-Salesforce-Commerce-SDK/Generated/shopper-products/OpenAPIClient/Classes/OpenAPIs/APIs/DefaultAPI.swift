//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**
     * enum for parameter levels
     */
    public enum Levels_getCategories: Int, CaseIterable {
        case _0 = 0
        case _1 = 1
        case _2 = 2
    }

    /**

     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter ids: (query) The comma separated list of category IDs (max 50). 
     - parameter siteId: (query)  
     - parameter levels: (query) Specifies how many levels of nested subcategories you want the server to return. The default value is 1. Valid values are 0, 1, or 2. (optional)
     - parameter locale: (query) The locale context. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getCategories(organizationId: String, ids: String, siteId: String, levels: Levels_getCategories? = nil, locale: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CategoryResult?, _ error: Error?) -> Void)) -> RequestTask {
        return getCategoriesWithRequestBuilder(organizationId: organizationId, ids: ids, siteId: siteId, levels: levels, locale: locale).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /organizations/{organizationId}/categories
     - When you use the URL template, the server returns multiple categories (a result object of category documents). You can use this template as a convenient way of obtaining multiple categories in a single request, instead of issuing separate requests for each category. You can specify up to 50 multiple IDs. You must enclose the list of IDs in parentheses. If a category identifier contains parenthesis or the separator sign, you must URL encode the character. The server only returns online categories.
     - responseHeaders: [X-RateLimit-Remaining(String), X-RateLimit-Reset(String), X-RateLimit-Limit(String)]
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter ids: (query) The comma separated list of category IDs (max 50). 
     - parameter siteId: (query)  
     - parameter levels: (query) Specifies how many levels of nested subcategories you want the server to return. The default value is 1. Valid values are 0, 1, or 2. (optional)
     - parameter locale: (query) The locale context. (optional)
     - returns: RequestBuilder<CategoryResult> 
     */
    open class func getCategoriesWithRequestBuilder(organizationId: String, ids: String, siteId: String, levels: Levels_getCategories? = nil, locale: String? = nil) -> RequestBuilder<CategoryResult> {
        var localVariablePath = "/organizations/{organizationId}/categories"
        let organizationIdPreEscape = "\(APIHelper.mapValueToPathItem(organizationId))"
        let organizationIdPostEscape = organizationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{organizationId}", with: organizationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ids": (wrappedValue: ids.encodeToJSON(), isExplode: false),
            "levels": (wrappedValue: levels?.encodeToJSON(), isExplode: false),
            "locale": (wrappedValue: locale?.encodeToJSON(), isExplode: false),
            "siteId": (wrappedValue: siteId.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CategoryResult>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter id: (path) The ID of the requested category. 
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter levels: (query)  (optional)
     - parameter locale: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getCategory(id: String, organizationId: String, siteId: String, levels: Int? = nil, locale: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Category?, _ error: Error?) -> Void)) -> RequestTask {
        return getCategoryWithRequestBuilder(id: id, organizationId: organizationId, siteId: siteId, levels: levels, locale: locale).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /organizations/{organizationId}/categories/{id}
     - When you use the URL template below, the server returns a category identified by its ID; by default, the server also returns the first level of subcategories, but you can specify another level by setting the levels parameter. The server only returns online categories.
     - responseHeaders: [X-RateLimit-Remaining(String), X-RateLimit-Reset(String), X-RateLimit-Limit(String)]
     - parameter id: (path) The ID of the requested category. 
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter levels: (query)  (optional)
     - parameter locale: (query)  (optional)
     - returns: RequestBuilder<Category> 
     */
    open class func getCategoryWithRequestBuilder(id: String, organizationId: String, siteId: String, levels: Int? = nil, locale: String? = nil) -> RequestBuilder<Category> {
        var localVariablePath = "/organizations/{organizationId}/categories/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let organizationIdPreEscape = "\(APIHelper.mapValueToPathItem(organizationId))"
        let organizationIdPostEscape = organizationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{organizationId}", with: organizationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "levels": (wrappedValue: levels?.encodeToJSON(), isExplode: false),
            "locale": (wrappedValue: locale?.encodeToJSON(), isExplode: false),
            "siteId": (wrappedValue: siteId.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Category>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     * enum for parameter expand
     */
    public enum Expand_getProduct: String, CaseIterable {
        case availability = "availability"
        case bundledProducts = "bundled_products"
        case links = "links"
        case promotions = "promotions"
        case options = "options"
        case images = "images"
        case prices = "prices"
        case variations = "variations"
        case setProducts = "set_products"
        case recommendations = "recommendations"
    }

    /**

     - parameter id: (path) The ID of the requested product. 
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter select: (query) The property selector declaring which fields are included into the response payload. You can specify a single field name, a comma-separated list of names, or work with wildcards.You can also sepcify Array Operations. The select will be available, tentatively from october 2023.The exact date will be announced via changelog. (optional)
     - parameter inventoryIds: (query) The optional inventory list IDs, for which the availability should be shown (comma-separated, max 5 inventoryListIDs). (optional)
     - parameter currency: (query) The currency mnemonic specified for price. (optional)
     - parameter expand: (query) The expand parameter. A comma separated list with the allowed values (availability, bundled_products, links, promotions, options, images, prices, variations, set_products, recommendations). All expand parameters are used for the request when no expand parameter is provided. The value \&quot;none\&quot; may be used to turn off all expand options. (optional)
     - parameter locale: (query) The locale context. (optional)
     - parameter allImages: (query) The flag that indicates whether to retrieve the whole image model for the requested product. (optional)
     - parameter perPricebook: (query) The flag that indicates whether to retrieve the per PriceBook prices and tiered prices (if available) for requested Products. Available end of June, 2021. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getProduct(id: String, organizationId: String, siteId: String, select: String? = nil, inventoryIds: String? = nil, currency: String? = nil, expand: [Expand_getProduct]? = nil, locale: String? = nil, allImages: Bool? = nil, perPricebook: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Product?, _ error: Error?) -> Void)) -> RequestTask {
        return getProductWithRequestBuilder(id: id, organizationId: organizationId, siteId: siteId, select: select, inventoryIds: inventoryIds, currency: currency, expand: expand, locale: locale, allImages: allImages, perPricebook: perPricebook).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /organizations/{organizationId}/products/{id}
     - Allows access to product details for a single product ID. Only products that are online and assigned to a site catalog are returned. Along with product details, the availability, images, price, bundled_products, set_products, recommedations, product options, variations, and promotions for the products will be included, as appropriate.
     - responseHeaders: [X-RateLimit-Remaining(String), X-RateLimit-Reset(String), X-RateLimit-Limit(String)]
     - parameter id: (path) The ID of the requested product. 
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter siteId: (query)  
     - parameter select: (query) The property selector declaring which fields are included into the response payload. You can specify a single field name, a comma-separated list of names, or work with wildcards.You can also sepcify Array Operations. The select will be available, tentatively from october 2023.The exact date will be announced via changelog. (optional)
     - parameter inventoryIds: (query) The optional inventory list IDs, for which the availability should be shown (comma-separated, max 5 inventoryListIDs). (optional)
     - parameter currency: (query) The currency mnemonic specified for price. (optional)
     - parameter expand: (query) The expand parameter. A comma separated list with the allowed values (availability, bundled_products, links, promotions, options, images, prices, variations, set_products, recommendations). All expand parameters are used for the request when no expand parameter is provided. The value \&quot;none\&quot; may be used to turn off all expand options. (optional)
     - parameter locale: (query) The locale context. (optional)
     - parameter allImages: (query) The flag that indicates whether to retrieve the whole image model for the requested product. (optional)
     - parameter perPricebook: (query) The flag that indicates whether to retrieve the per PriceBook prices and tiered prices (if available) for requested Products. Available end of June, 2021. (optional)
     - returns: RequestBuilder<Product> 
     */
    open class func getProductWithRequestBuilder(id: String, organizationId: String, siteId: String, select: String? = nil, inventoryIds: String? = nil, currency: String? = nil, expand: [Expand_getProduct]? = nil, locale: String? = nil, allImages: Bool? = nil, perPricebook: Bool? = nil) -> RequestBuilder<Product> {
        var localVariablePath = "/organizations/{organizationId}/products/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let organizationIdPreEscape = "\(APIHelper.mapValueToPathItem(organizationId))"
        let organizationIdPostEscape = organizationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{organizationId}", with: organizationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "select": (wrappedValue: select?.encodeToJSON(), isExplode: false),
            "inventoryIds": (wrappedValue: inventoryIds?.encodeToJSON(), isExplode: false),
            "currency": (wrappedValue: currency?.encodeToJSON(), isExplode: false),
            "expand": (wrappedValue: expand?.encodeToJSON(), isExplode: false),
            "locale": (wrappedValue: locale?.encodeToJSON(), isExplode: false),
            "allImages": (wrappedValue: allImages?.encodeToJSON(), isExplode: false),
            "perPricebook": (wrappedValue: perPricebook?.encodeToJSON(), isExplode: false),
            "siteId": (wrappedValue: siteId.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Product>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     * enum for parameter expand
     */
    public enum Expand_getProducts: String, CaseIterable {
        case availability = "availability"
        case links = "links"
        case promotions = "promotions"
        case options = "options"
        case images = "images"
        case prices = "prices"
        case variations = "variations"
        case recommendations = "recommendations"
    }

    /**

     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter ids: (query) The IDs of the requested products (comma-separated, max 24 IDs). 
     - parameter siteId: (query)  
     - parameter select: (query) The property selector declaring which fields are included into the response payload. You can specify a single field name, a comma-separated list of names, or work with wildcards.You can also sepcify Array Operations.The select will be available, tentatively from october 2023.The exact date will be announced via changelog. (optional)
     - parameter inventoryIds: (query) The optional inventory list IDs, for which the availability should be shown (comma-separated, max 5 inventoryListIDs). (optional)
     - parameter currency: (query) The currency mnemonic specified for price. (optional)
     - parameter expand: (query) The expand parameter. A comma separated list with the allowed values (availability, links, promotions, options, images, prices, variations, recommendations). All expand parameters are used for the request when no expand parameter is provided. The value \&quot;none\&quot; may be used to turn off all expand options. (optional)
     - parameter locale: (query) The locale context. (optional)
     - parameter allImages: (query) The flag that indicates whether to retrieve the whole image model for the requested product. (optional)
     - parameter perPricebook: (query) The flag that indicates whether to retrieve the per PriceBook prices and tiered prices (if available) for requested Products. Available end of June, 2021. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getProducts(organizationId: String, ids: String, siteId: String, select: String? = nil, inventoryIds: String? = nil, currency: String? = nil, expand: [Expand_getProducts]? = nil, locale: String? = nil, allImages: Bool? = nil, perPricebook: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ProductResult?, _ error: Error?) -> Void)) -> RequestTask {
        return getProductsWithRequestBuilder(organizationId: organizationId, ids: ids, siteId: siteId, select: select, inventoryIds: inventoryIds, currency: currency, expand: expand, locale: locale, allImages: allImages, perPricebook: perPricebook).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /organizations/{organizationId}/products
     - Allows access to multiple products by a single request. Only products that are online and assigned to a site catalog are returned. The maximum number of productIDs that can be requested are 24. Along with product details, the availability, product options, images, price, promotions, and variations for the valid products will be included, as appropriate.
     - responseHeaders: [X-RateLimit-Remaining(String), X-RateLimit-Reset(String), X-RateLimit-Limit(String)]
     - parameter organizationId: (path) An identifier for the organization the request is being made by. 
     - parameter ids: (query) The IDs of the requested products (comma-separated, max 24 IDs). 
     - parameter siteId: (query)  
     - parameter select: (query) The property selector declaring which fields are included into the response payload. You can specify a single field name, a comma-separated list of names, or work with wildcards.You can also sepcify Array Operations.The select will be available, tentatively from october 2023.The exact date will be announced via changelog. (optional)
     - parameter inventoryIds: (query) The optional inventory list IDs, for which the availability should be shown (comma-separated, max 5 inventoryListIDs). (optional)
     - parameter currency: (query) The currency mnemonic specified for price. (optional)
     - parameter expand: (query) The expand parameter. A comma separated list with the allowed values (availability, links, promotions, options, images, prices, variations, recommendations). All expand parameters are used for the request when no expand parameter is provided. The value \&quot;none\&quot; may be used to turn off all expand options. (optional)
     - parameter locale: (query) The locale context. (optional)
     - parameter allImages: (query) The flag that indicates whether to retrieve the whole image model for the requested product. (optional)
     - parameter perPricebook: (query) The flag that indicates whether to retrieve the per PriceBook prices and tiered prices (if available) for requested Products. Available end of June, 2021. (optional)
     - returns: RequestBuilder<ProductResult> 
     */
    open class func getProductsWithRequestBuilder(organizationId: String, ids: String, siteId: String, select: String? = nil, inventoryIds: String? = nil, currency: String? = nil, expand: [Expand_getProducts]? = nil, locale: String? = nil, allImages: Bool? = nil, perPricebook: Bool? = nil) -> RequestBuilder<ProductResult> {
        var localVariablePath = "/organizations/{organizationId}/products"
        let organizationIdPreEscape = "\(APIHelper.mapValueToPathItem(organizationId))"
        let organizationIdPostEscape = organizationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{organizationId}", with: organizationIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "select": (wrappedValue: select?.encodeToJSON(), isExplode: false),
            "ids": (wrappedValue: ids.encodeToJSON(), isExplode: false),
            "inventoryIds": (wrappedValue: inventoryIds?.encodeToJSON(), isExplode: false),
            "currency": (wrappedValue: currency?.encodeToJSON(), isExplode: false),
            "expand": (wrappedValue: expand?.encodeToJSON(), isExplode: false),
            "locale": (wrappedValue: locale?.encodeToJSON(), isExplode: false),
            "allImages": (wrappedValue: allImages?.encodeToJSON(), isExplode: false),
            "perPricebook": (wrappedValue: perPricebook?.encodeToJSON(), isExplode: false),
            "siteId": (wrappedValue: siteId.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProductResult>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
