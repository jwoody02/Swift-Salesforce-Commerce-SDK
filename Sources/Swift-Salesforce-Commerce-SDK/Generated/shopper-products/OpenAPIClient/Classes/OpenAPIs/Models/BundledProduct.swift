//
// BundledProduct.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A bundle of products that can be bought together (all or nothing). Each product in the bundle can itself be bought independently, but this is outside of the context of the bundle. A bundle is a purchasing convenience. *Product bundle has a SKU and price.* */
public struct BundledProduct: Codable, JSONEncodable, Hashable {

    public var id: String
    public var product: Product
    /** For the product being bundled, the quantity added to the bundle. */
    public var quantity: Double

    public init(id: String, product: Product, quantity: Double) {
        self.id = id
        self.product = product
        self.quantity = quantity
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case product
        case quantity
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(product, forKey: .product)
        try container.encode(quantity, forKey: .quantity)
    }
}

