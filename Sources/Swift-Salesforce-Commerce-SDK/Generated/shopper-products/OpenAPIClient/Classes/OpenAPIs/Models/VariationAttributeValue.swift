//
// VariationAttributeValue.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Document representing a variation attribute value. */
public struct VariationAttributeValue: Codable, JSONEncodable, Hashable {

    static let valueRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** The localized description of the variation value. */
    public var description: String?
    public var image: Image?
    public var imageSwatch: Image?
    /** The localized display name of the variation value. */
    public var name: String?
    /** A flag indicating whether at least one variant with this variation attribute value is available to sell. */
    public var orderable: Bool?
    /** The actual variation value. */
    public var value: String

    public init(description: String? = nil, image: Image? = nil, imageSwatch: Image? = nil, name: String? = nil, orderable: Bool? = nil, value: String) {
        self.description = description
        self.image = image
        self.imageSwatch = imageSwatch
        self.name = name
        self.orderable = orderable
        self.value = value
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case description
        case image
        case imageSwatch
        case name
        case orderable
        case value
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(imageSwatch, forKey: .imageSwatch)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(orderable, forKey: .orderable)
        try container.encode(value, forKey: .value)
    }
}

