//
// Option.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Product options enable you to sell configurable products that have optional accessories, upgrades, or additional services. Options are always purchased with a product and can&#39;t be purchased separately. *Product Option has a SKU and a price associated with it.* */
public struct Option: Codable, JSONEncodable, Hashable {

    static let idRule = StringRule(minLength: 1, maxLength: 100, pattern: nil)
    /** The localized description of the option. */
    public var description: String?
    /** The ID of the option. */
    public var id: String
    /** The URL to the option image. */
    public var image: String?
    /** The localized name of the option. */
    public var name: String?
    /** The array of option values. This array can be empty. */
    public var values: [OptionValue]?

    public init(description: String? = nil, id: String, image: String? = nil, name: String? = nil, values: [OptionValue]? = nil) {
        self.description = description
        self.id = id
        self.image = image
        self.name = name
        self.values = values
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case description
        case id
        case image
        case name
        case values
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(values, forKey: .values)
    }
}

