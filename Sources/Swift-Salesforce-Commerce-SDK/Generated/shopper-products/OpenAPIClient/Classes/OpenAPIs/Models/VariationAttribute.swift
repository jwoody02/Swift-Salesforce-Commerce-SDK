//
// VariationAttribute.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Document representing a variation attribute. */
public struct VariationAttribute: Codable, JSONEncodable, Hashable {

    static let idRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** The ID of the variation attribute. */
    public var id: String
    /** The localized display name of the variation attribute. */
    public var name: String?
    /** The sorted array of variation values. This array can be empty. */
    public var values: [VariationAttributeValue]?

    public init(id: String, name: String? = nil, values: [VariationAttributeValue]? = nil) {
        self.id = id
        self.name = name
        self.values = values
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case values
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(values, forKey: .values)
    }
}

