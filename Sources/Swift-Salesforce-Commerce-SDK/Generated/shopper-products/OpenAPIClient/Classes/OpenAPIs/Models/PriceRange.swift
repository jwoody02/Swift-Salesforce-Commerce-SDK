//
// PriceRange.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Document representing price ranges for a product which happens to be a master product (per Pricebook) */
public struct PriceRange: Codable, JSONEncodable, Hashable {

    /** Maximum price for the given pricebook (usually for a master Product would be the price for the Variant which has the highest price out of all Variants in that pricebook) */
    public var maxPrice: Double?
    /** Minimum price for the given pricebook (usually for a master Product would be the price for the Variant which has the least price out of all Variants in that pricebook) */
    public var minPrice: Double?
    /** The active pricebook from which the min and the max prices are calculated. The pricebook is based on the site context of the request as defined in ECOM. */
    public var pricebook: String?

    public init(maxPrice: Double? = nil, minPrice: Double? = nil, pricebook: String? = nil) {
        self.maxPrice = maxPrice
        self.minPrice = minPrice
        self.pricebook = pricebook
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case maxPrice
        case minPrice
        case pricebook
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(maxPrice, forKey: .maxPrice)
        try container.encodeIfPresent(minPrice, forKey: .minPrice)
        try container.encodeIfPresent(pricebook, forKey: .pricebook)
    }
}

